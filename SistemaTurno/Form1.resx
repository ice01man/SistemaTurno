<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
</root>